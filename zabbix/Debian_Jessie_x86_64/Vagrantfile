# Zabbix: multi-server architecture
# Site: www.linuxsysadmin.com.br
# Author: Elvis Suffi Pompeu
# Email: elvis.suffipompeu@hotmail.com.br
# https://github.com/elvispompeu

Vagrant.configure("2") do |config|

	if Vagrant.has_plugin?("vagrant-timezone")
    		config.timezone.value = :host
  	end
	
	# Banco de Dados: PostgreSQL
        config.vm.define "srvpgsql01" do |srvpgsql01|
                srvpgsql01.vm.box = "debian/jessie64" # Distribuição e Versão do SO
                srvpgsql01.vm.hostname = "srvpgsql01" # Hostname da VM
                srvpgsql01.vm.network "private_network", ip: "192.168.50.2"

                srvpgsql01.vm.provider "virtualbox" do |vb|
                        vb.memory = "512" # 512MB de Memória RAM
                        vb.cpus = "1" # Quantidade Core de CPU
                        vb.name = "srvpgsql01" # Nome da máquina Virtual no VirtualBox
                end

                 # Provisionar o PostgreSQL.
                srvpgsql01.vm.provision "shell", inline: <<-SHELL
                # Criando o repositório do PostgreSQL
                wget https://www.postgresql.org/media/keys/ACCC4CF8.asc -O /tmp/ACCC4CF8.asc
		apt-key add /tmp/ACCC4CF8.asc
		echo "deb http://apt.postgresql.org/pub/repos/apt/ jessie-pgdg main" > /etc/apt/sources.list.d/postgresql.list
                apt-get update
		# Instalando o PostgreSQL 9.5 e o Replication Manager
		apt-get -y install postgresql-9.5 postgresql-9.5-repmgr
		# Preparando o cenário dos PostgreSQL Master
		echo -e "CREATE USER zabbix WITH PASSWORD '123456789'; \nCREATE DATABASE zabbixdb OWNER zabbix;" > /tmp/sql
		su - postgres -c "psql < /tmp/sql"
		rm -f /tmp/sql
		su - postgres -c "createuser -s repmgr"
		su - postgres -c "createdb repmgr -O repmgr"
		su - postgres -c "psql -f /usr/share/postgresql/9.5/contrib/repmgr_funcs.sql repmgr"
		systemctl stop postgresql
		mv -fv /vagrant/postgresql.conf /etc/postgresql/9.5/main/
		mv -fv /vagrant/pg_hba.conf /etc/postgresql/9.5/main/
		mv -fv /vagrant/repmgr.conf /etc/
		mv -fv /vagrant/hosts /etc/hosts
		sed -i "s/MAQUINA/$(hostname)/g" /etc/hosts
		sed -i "s/NUMERO/1/g" /etc/repmgr.conf
		sed -i "s/NOME/$(hostname)/g" /etc/repmgr.conf
		sed -i "s/192.168.50.IP/192.168.50.2/g" /etc/repmgr.conf
		chown -R postgres. /etc/postgresql/9.5/main/
		systemctl start postgresql
		# Cadastrando o PostgreSQL no Cluster
		su - postgres -c "repmgr -f /etc/repmgr.conf master register"
		su - postgres -c "repmgr -f /etc/repmgr.conf cluster show"
                SHELL

        end
	
	# Banco de Dados: PostgreSQL Replica 1
        config.vm.define "srvpgsql02" do |srvpgsql02|
                srvpgsql02.vm.box = "debian/jessie64" # Distribuição e Versão do SO
                srvpgsql02.vm.hostname = "srvpgsql02" # Hostname da VM
                srvpgsql02.vm.network "private_network", ip: "192.168.50.3"

                srvpgsql02.vm.provider "virtualbox" do |vb|
                        vb.memory = "512" # 512MB de Memória RAM
                        vb.cpus = "1" # Quantidade Core de CPU
                        vb.name = "srvpgsql02" # Nome da máquina Virtual no VirtualBox
                end

                 # Provisionar o PostgreSQL.
                srvpgsql02.vm.provision "shell", inline: <<-SHELL
                # Criando o repositório do PostgreSQL
		wget https://www.postgresql.org/media/keys/ACCC4CF8.asc -O /tmp/ACCC4CF8.asc
		apt-key add /tmp/ACCC4CF8.asc
		echo "deb http://apt.postgresql.org/pub/repos/apt/ jessie-pgdg main" > /etc/apt/sources.list.d/postgresql.list
                apt-get update
		# Instalando o PostgreSQL 9.5 e o Replication Manager
		apt-get -y install postgresql-9.5 postgresql-9.5-repmgr
		systemctl stop postgresql
		# Preparando o cenário dos PostgreSQL Slaves
		chown postgres. /vagrant/postgresql.conf /vagrant/pg_hba.conf
		mv -fv /vagrant/postgresql.conf /etc/postgresql/9.5/main/
		mv -fv /vagrant/pg_hba.conf /etc/postgresql/9.5/main/
		mv -fv /vagrant/repmgr.conf /etc/
		mv -fv /vagrant/hosts /etc/hosts
		sed -i "s/MAQUINA/$(hostname)/g" /etc/hosts
		sed -i "s/NUMERO/2/g" /etc/repmgr.conf
		sed -i "s/NOME/$(hostname)/g" /etc/repmgr.conf
		sed -i "s/192.168.50.IP/192.168.50.3/g" /etc/repmgr.conf
		rm -rvf /var/lib/postgresql/9.5/main/*
		# Fazendo o clone do PostgreSQL Master.
		su - postgres -c "repmgr -f /etc/repmgr.conf -D /var/lib/postgresql/9.5/main/ -d repmgr  -U repmgr --verbose --ignore-external-config-files standby clone -h 192.168.50.2"
		cp -v /etc/postgresql/9.5/main/postgresql.conf /var/lib/postgresql/9.5/main/
		cp -v /etc/postgresql/9.5/main/pg_hba.conf /var/lib/postgresql/9.5/main/
		chown -R postgres. /var/lib/postgresql/9.5/main/
		chown -R postgres. /etc/postgresql/9.5/main/
		mkdir /var/run/postgresql/9.5-main.pg_stat_tmp
		chown -R postgres. /var/run/postgresql/9.5-main.pg_stat_tmp
		# Iniciando o postgreSQL
		su - postgres -c "/usr/lib/postgresql/9.5/bin/pg_ctl -D /var/lib/postgresql/9.5/main/ start"
		# Cadastrando o PostgreSQL no Cluster
		sleep 10
		su - postgres -c "repmgr -f /etc/repmgr.conf  standby register"
                SHELL

        end
	
	# Banco de Dados: PostgreSQL Replica 2
        config.vm.define "srvpgsql03" do |srvpgsql03|
                srvpgsql03.vm.box = "debian/jessie64" # Distribuição e Versão do SO
                srvpgsql03.vm.hostname = "srvpgsql03" # Hostname da VM
                srvpgsql03.vm.network "private_network", ip: "192.168.50.4"

                srvpgsql03.vm.provider "virtualbox" do |vb|
                        vb.memory = "512" # 512MB de Memória RAM
                        vb.cpus = "1" # Quantidade Core de CPU
                        vb.name = "srvpgsql03" # Nome da máquina Virtual no VirtualBox
                end

                 # Provisionar o PostgreSQL.
                srvpgsql03.vm.provision "shell", inline: <<-SHELL
                # Criando o repositório do PostgreSQL
		wget https://www.postgresql.org/media/keys/ACCC4CF8.asc -O /tmp/ACCC4CF8.asc
		apt-key add /tmp/ACCC4CF8.asc
		echo "deb http://apt.postgresql.org/pub/repos/apt/ jessie-pgdg main" > /etc/apt/sources.list.d/postgresql.list
                apt-get update
		# Instalando o PostgreSQL 9.5 e o Replication Manager
		apt-get -y install postgresql-9.5 postgresql-9.5-repmgr
		systemctl stop postgresql
		# Preparando o cenário dos PostgreSQL Slaves
		chown postgres. /vagrant/postgresql.conf /vagrant/pg_hba.conf
		mv -fv /vagrant/postgresql.conf /etc/postgresql/9.5/main/
		mv -fv /vagrant/pg_hba.conf /etc/postgresql/9.5/main/
		mv -fv /vagrant/repmgr.conf /etc/
		mv -fv /vagrant/hosts /etc/hosts
		sed -i "s/MAQUINA/$(hostname)/g" /etc/hosts
		sed -i "s/NUMERO/3/g" /etc/repmgr.conf
		sed -i "s/NOME/$(hostname)/g" /etc/repmgr.conf
		sed -i "s/192.168.50.IP/192.168.50.4/g" /etc/repmgr.conf
		rm -rvf /var/lib/postgresql/9.5/main/*
		# Fazendo o clone do PostgreSQL Master.
		su - postgres -c "repmgr -f /etc/repmgr.conf -D /var/lib/postgresql/9.5/main/ -d repmgr  -U repmgr --verbose --ignore-external-config-files standby clone -h 192.168.50.2"
		cp -v /etc/postgresql/9.5/main/postgresql.conf /var/lib/postgresql/9.5/main/
		cp -v /etc/postgresql/9.5/main/pg_hba.conf /var/lib/postgresql/9.5/main/
		chown -R postgres. /var/lib/postgresql/9.5/main/
		chown -R postgres. /etc/postgresql/9.5/main/
		mkdir /var/run/postgresql/9.5-main.pg_stat_tmp
		chown -R postgres. /var/run/postgresql/9.5-main.pg_stat_tmp
		# Iniciando o postgreSQL
		su - postgres -c "/usr/lib/postgresql/9.5/bin/pg_ctl -D /var/lib/postgresql/9.5/main/ start"
		# Cadastrando o PostgreSQL no Cluster
		sleep 10
		su - postgres -c "repmgr -f /etc/repmgr.conf  standby register"
                SHELL

        end

	# Nginx: Balancer
        config.vm.define "srvzbxpool01" do |srvzbxpool01|
                srvzbxpool01.vm.box = "debian/jessie64" # Distribuição e Versão do SO
                srvzbxpool01.vm.hostname = "srvzbxpool01" # Hostname da VM
                srvzbxpool01.vm.network "private_network", ip: "192.168.50.5"
                srvzbxpool01.vm.network "forwarded_port", guest: 80, host: 8080 # Encaminhamento de Porta de 80 para 8080

                srvzbxpool01.vm.provider "virtualbox" do |vb|
                        vb.memory = "512" # 512MB de Memória RAM
                        vb.cpus = "1" # Quantidade Core de CPU
                        vb.name = "srvzbxpool01" # Nome da máquina Virtual no VirtualBox
                end

		# Provisionar um servidor web (httpd) nginx como balanceador de carga.
                srvzbxpool01.vm.provision "shell", inline: <<-SHELL
		# Configurando o repositório oficial do Nginx
               	wget http://nginx.org/keys/nginx_signing.key -O /tmp/nginx_signing.key 
		apt-key add /tmp/nginx_signing.key
		echo "deb http://nginx.org/packages/debian/ jessie nginx" > /etc/apt/sources.list.d/nginx.list
		echo "deb-src http://nginx.org/packages/debian/ jessie nginx" >> /etc/apt/sources.list.d/nginx.list
		apt-get update
		# Instalando o Nginx
                apt-get -y install nginx
                rm -fv /etc/nginx/conf.d/default.conf
		# Configurando o balanceamento de carga no Nginx
		mv -fv /vagrant/balancer.conf /etc/nginx/conf.d/
		mv -fv /vagrant/hosts /etc/hosts
		sed -i "s/MAQUINA/$(hostname)/g" /etc/hosts
		# Subindo o serviço Nginx
		systemctl restart nginx
                SHELL

        end

	# node01
        config.vm.define "srvfrt01" do |srvfrt01|
                srvfrt01.vm.box = "debian/jessie64" # Distribuição e Versão do SO
                srvfrt01.vm.hostname = "srvfrt01" # Hostname da VM
                srvfrt01.vm.network "private_network", ip: "192.168.50.6"
                srvfrt01.vm.network "forwarded_port", guest: 80, host: 8081 # Encaminhamento de Porta de 80 para 8081

                srvfrt01.vm.provider "virtualbox" do |vb|
                        vb.memory = "512" # 512MB de Memória RAM
                        vb.cpus = "1" # Quantidade Core de CPU
                        vb.name = "srvfrt01" # Nome da máquina Virtual no VirtualBox
                end
	
		 # Provisionar o frontend zabbix.
        	srvfrt01.vm.provision "shell", inline: <<-SHELL
		# Configurando o repositório oficial do zabbix 3
		wget http://repo.zabbix.com/zabbix/3.0/debian/pool/main/z/zabbix-release/zabbix-release_3.0-1+jessie_all.deb -O /tmp/zabbix-release_3.0-1+jessie_all.deb
                dpkg -i /tmp/zabbix-release_3.0-1+jessie_all.deb
                apt-get update
		# Instalando o frontend do zabbix
                apt-get -y install zabbix-frontend-php php5-pgsql
		mv -fv /vagrant/apache.conf /etc/apache2/conf-enabled/zabbix.conf
		mv -fv /vagrant/zabbix.conf.php /usr/share/zabbix/conf/zabbix.conf.php
		mv -fv /vagrant/hosts /etc/hosts
		sed -i "s/MAQUINA/$(hostname)/g" /etc/hosts
		sed -i "s/node.linuxsysadmin.com.br/$(hostname).linuxsysadmin.com.br/" /etc/apache2/conf-enabled/zabbix.conf
		# Iniciando o apache2
		systemctl restart apache2
		SHELL

        end
	
	# node02
        config.vm.define "srvfrt02" do |srvfrt02|
                srvfrt02.vm.box = "debian/jessie64" # Distribuição e Versão do SO
                srvfrt02.vm.hostname = "srvfrt02" # Hostname da VM
                srvfrt02.vm.network "private_network", ip: "192.168.50.7"
                srvfrt02.vm.network "forwarded_port", guest: 80, host: 8082 # Encaminhamento de Porta de 80 para 8082

                srvfrt02.vm.provider "virtualbox" do |vb|
                        vb.memory = "512" # 512MB de Memória RAM
                        vb.cpus = "1" # Quantidade Core de CPU
                        vb.name = "srvfrt02" # Nome da máquina Virtual no VirtualBox
                end
		
		 # Provisionar o frontend zabbix.
	        srvfrt02.vm.provision "shell", inline: <<-SHELL
                # Configurando o repositório oficial do zabbix 3
		wget http://repo.zabbix.com/zabbix/3.0/debian/pool/main/z/zabbix-release/zabbix-release_3.0-1+jessie_all.deb -O /tmp/zabbix-release_3.0-1+jessie_all.deb
                dpkg -i /tmp/zabbix-release_3.0-1+jessie_all.deb
                apt-get update
		# Instalando o frontend do zabbix
                apt-get -y install zabbix-frontend-php php5-pgsql
		mv -fv /vagrant/apache.conf /etc/apache2/conf-enabled/zabbix.conf
		mv -fv /vagrant/zabbix.conf.php /usr/share/zabbix/conf/zabbix.conf.php
		mv -fv /vagrant/hosts /etc/hosts
		sed -i "s/MAQUINA/$(hostname)/g" /etc/hosts
		sed -i "s/node.linuxsysadmin.com.br/$(hostname).linuxsysadmin.com.br/" /etc/apache2/conf-enabled/zabbix.conf
		# Iniciando o apache2
		systemctl restart apache2
        	SHELL

        end
	
	# zabbix-server
        config.vm.define "srvzbx01" do |srvzbx01|
                srvzbx01.vm.box = "debian/jessie64" # Distribuição e Versão do SO
                srvzbx01.vm.hostname = "srvzbx01" # Hostname da VM
                srvzbx01.vm.network "private_network", ip: "192.168.50.8"

                srvzbx01.vm.provider "virtualbox" do |vb|
                        vb.memory = "512" # 512MB de Memória RAM
                        vb.cpus = "1" # Quantidade Core de CPU
                        vb.name = "srvzbx01" # Nome da máquina Virtual no VirtualBox
                end

                 # Provisionar o servidor zabbix.
                srvzbx01.vm.provision "shell", inline: <<-SHELL
		# Preparando o repositório oficial do Zabbix 3.
                wget http://repo.zabbix.com/zabbix/3.0/debian/pool/main/z/zabbix-release/zabbix-release_3.0-1+jessie_all.deb -O /tmp/zabbix-release_3.0-1+jessie_all.deb
                dpkg -i /tmp/zabbix-release_3.0-1+jessie_all.deb
                apt-get update
		# Instalando o zabbix_server com suporte a PostgreSQL
		apt-get -y install zabbix-server-pgsql
		gunzip /usr/share/doc/zabbix-server-pgsql/create.sql.gz
		PGPASSWORD=123456789 psql -Uzabbix -h 192.168.50.2 zabbixdb < /usr/share/doc/zabbix-server-pgsql/create.sql
		mv -fv /vagrant/zabbix_server.conf /etc/zabbix
		mv -fv /vagrant/hosts /etc/hosts
		sed -i "s/MAQUINA/$(hostname)/g" /etc/hosts
		# Iniciando zabbix_server
		systemctl restart zabbix-server.service
                SHELL

        end
	
end
